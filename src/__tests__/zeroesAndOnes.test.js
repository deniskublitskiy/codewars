const { bestZeroesAndOnes: zeroesAndOnes } = require('../zeroesAndOnes');

describe('Zeroes and Ones', () => {
    test('Test case #1', () => {
        expect(zeroesAndOnes([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1])).toBe(10);
    })

    test('Test case #2', () => {
        expect(zeroesAndOnes([1,1,0,1,1,0,1,1])).toBe(5);
    })

    test('Test case #3', () => {
        expect(zeroesAndOnes([1,1,1,0,1,1,0,1,1,1])).toBe(6);
    })

    test('Test case #4', () => {
        expect(zeroesAndOnes([1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,1,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,0,1,1,0,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,1,0,1,0,1,0,1,1,1,0,0,1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,1,0,1,1,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,0,1,1,1,1,1,0,0,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,1,1,0,0,0,0,1,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0])).toBe(219);
    })
});